#!/bin/bash

########################################
# Windows bit
update_windows()
{
	if [ ! -d build ]; then mkdir -p build/msys/{debug,release}; fi

	cd build/msys/debug
	echo Updating MSYS debug build environment...
	cmake -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE=Debug ../../..
	cd ../release
	echo Updating MSYS release build environment...
	cmake -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release ../../..
	cd ../..

	if [ ! -d vs ]; then mkdir vs; fi
	cd vs

	echo Updating Visual Studio build environment...
	cmake ../..
	cd ../..

	# utility script to run make from project root
	echo "#!/bin/bash" > make
	echo "cd build/msys/debug" >> make
	echo "build=\"debug\"" >> make
	echo "if [ \$# -gt 0 ]; then" >> make
	echo "	case \$1 in" >> make
	echo "		[dD][eE][bB][uU][gG]) shift;;" >> make
	echo "		[rR][eE][lL][eE][aA][sS][eE]) shift; cd ../release; build=release ;;" >> make
	echo "	esac" >> make
	echo "fi" >> make
	echo "echo Building \$build..." >> make
	echo "make \$@" >> make

	# utility script to run the build from project root
	echo "#!/bin/bash" > make
	echo "cd build/msys/debug" >> make
	echo "if [ \$# -gt 0 ]; then" >> make
	echo "	case \$1 in" >> make
	echo "		[dD][eE][bB][uU][gG]) shift;;" >> make
	echo "		[rR][eE][lL][eE][aA][sS][eE]) shift; cd ../release;;" >> make
	echo "	esac" >> make
	echo "fi" >> make
	echo "./test \$@" >> make

	return
}
#
########################################

########################################
# Linux bit
update_linux()
{
	if [ ! -d build ]; then mkdir -p build/{debug,release}; fi

	cd build/debug
	echo Updating Linux debug build environment...
	cmake -DCMAKE_BUILD_TYPE=Debug ../..
	cd ../release
	echo Updating Linux release build environment...
	cmake -DCMAKE_BUILD_TYPE=Debug ../..
	ce ../..

	# utility script to run make from project root
	echo "#!/bin/bash" > make
	echo "cd build/debug" >> make
	echo "build=\"debug\"" >> make
	echo "if [ \$# -gt 0 ]; then" >> make
	echo "	case \$1 in" >> make
	echo "		[dD][eE][bB][uU][gG]) shift;;" >> make
	echo "		[rR][eE][lL][eE][aA][sS][eE]) shift; cd ../release; build=release ;;" >> make
	echo "	esac" >> make
	echo "fi" >> make
	echo "echo Building \$build..." >> make
	echo "make \$@" >> make

	# utility script to run the build from project root
	echo "#!/bin/bash" > make
	echo "cd build/debug" >> make
	echo "if [ \$# -gt 0 ]; then" >> make
	echo "	case \$1 in" >> make
	echo "		[dD][eE][bB][uU][gG]) shift;;" >> make
	echo "		[rR][eE][lL][eE][aA][sS][eE]) shift; cd ../release;;" >> make
	echo "	esac" >> make
	echo "fi" >> make
	echo "./test \$@" >> make

	return
}
#
########################################

case $1 in
[wW][iI][nN]) update_windows ;;
[wW][iI][nN][dD][oO][wW][sS]) update_windows ;;
[lL][iI][nN]) update_linux ;;
[lL][iI][nN][uU][xX]) update_linux ;;
*) echo "Invalid option [$1]"; exit ;;
esac

echo Build environment updated.

